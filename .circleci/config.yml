version: 2
jobs:

  unit-test:
    docker:
      - image: maven:3.5.4-jdk-8
    working_directory: ~/core-grpc-jdbc-connector/
    steps:
      - checkout:
          path: ~/core-grpc-jdbc-connector
      - run:
          name: Run unittest
          command: mvn -B test

  integration-test:
    docker:
      - image: circleci/node:8.15.1
    working_directory: ~/core-grpc-jdbc-connector/example/node
    steps:
      - checkout:
          path: ~/core-grpc-jdbc-connector
      - restore_cache:
          key: npm-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install --quiet
      - run:
          name: Run ESLint
          command: npm run lint
      - save_cache:
          key: npm-dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - setup_remote_docker
      - run:
          name: Spin up environment
          working_directory: ~/core-grpc-jdbc-connector/example
          command: ACCEPT_EULA=yes docker-compose up --build -d
      - run:
          name: Run integration test
          command: |
            set -e
            ENGINE_CONTAINER_ID=$(docker ps -aqf "name=qix-engine")
            GATEWAY_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.Gateway}}{{end}}' "$ENGINE_CONTAINER_ID")
            TEST_CONTAINER_ID=$(docker run -d -e ENGINE_HOST=$GATEWAY_IP node:9.8.0 tail -f /dev/null)
            docker cp . $TEST_CONTAINER_ID:/
            docker exec $TEST_CONTAINER_ID sh -c 'npm test && npm run start:ci'

workflows:
  version: 2
  build_and_test:
    jobs:
      - unit-test
      - integration-test:
          requires:
            - unit-test
